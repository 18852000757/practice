函数：注意局部变量和全局变量 在函数里面定义的变量只能在自己的函数里用，在别的函数里不能用，在函数外也不能用

def get_wendu():
    wendu = 33
    return wendu

def print_wendu(wendu):
    print("温度是%d"%wendu)

result = get_wendu()#如果一个函数有返回值,但是没有在调用函数之前 用个变量保存的话,那么没有任何的意义
print_wendu(result)

#定义一个全局变量,wendu
wendu = 0

def get_wendu():
    #如果wendu这个变量已经在全局变量的位置定义了,此时还想在函数中对这个全局变量进行修改的话
    #那么 仅仅是 wendu=一个值  这还不够,,,此时wendu这个变量是一个局部变量,仅仅是和全局变量的名字
    #相同罢了
    #wendu = 33
    
    #使用global用来对一个全局变量的声明,那么这个函数中的wendu=33就不是定义一个局部变量,而是
    #对全局变量进行修改
    global wendu
    wendu = 33

def print_wendu():
    print("温度是%d"%wendu)

get_wendu()
print_wendu()

函数版名片管理系统：

#用来存储名片
card_infors = []

def print_menu():
    """完成打印功能菜单"""
    print("="*50)
    print("   名片管理系统 V0.01")
    print(" 1. 添加一个新的名片")
    print(" 2. 删除一个名片")
    print(" 3. 修改一个名片")
    print(" 4. 查询一个名片")
    print(" 5. 显示所有的名片")
    print(" 6. 退出系统")
    print("="*50)

def add_new_card_infor():
    """完成添加一个新的名片"""
    new_name = input("请输入新的名字:")
    new_qq = input("请输入新的QQ:")
    new_weixin = input("请输入新的微信:")
    new_addr = input("请输入新的住址:")

    #定义一个新的字典,用来存储一个新的名片
    new_infor = {}
    new_infor['name'] = new_name
    new_infor['qq'] = new_qq
    new_infor['weixin'] = new_weixin
    new_infor['addr'] = new_addr

    #将一个字典,添加到列表中
    global card_infors
    card_infors.append(new_infor)

    #print(card_infors)# for test


def shanchu_card_infor():
    global card_infors
    shanchu_name = input("请输入要删除的名字:")
    for temp in card_infors:
        if shanchu_name == temp["name"]:
            card_infors.remove(temp)
        else:
            print("不存在")



    
def find_card_infor():
    """用来查询一个名片"""

    global card_infors

    find_name = input("请输入要查找的姓名:")
    find_flag = 0#默认表示没有找到
    for temp in card_infors:
        if find_name == temp["name"]:
            print("姓名\tQQ\t微信\t住址")
            print("%s\t%s\t%s\t%s"%(temp['name'], temp['qq'], temp['weixin'], temp['addr']))
            find_flag=1#表示找到了
            break
    
    #判断是否找到了
    if find_flag == 0:
        print("查无此人....")

def show_all_infor():
    """显示所有的名片信息"""

    global card_infors

    print("姓名\tQQ\t微信\t住址")
    for temp in card_infors:
        print("%s\t%s\t%s\t%s"%(temp['name'], temp['qq'], temp['weixin'], temp['addr']))


def main():
    """完成对整个程序的控制"""
    #1. 打印功能提示
    print_menu()

    while True:

        #2. 获取用户的输入
        num = int(input("请输入操作序号:"))

        #3. 根据用户的数据执行相应的功能
        if num==1:
            add_new_card_infor()
            
        elif num==2:
            shanchu_card_infor()
        
        elif num==3:
            pass
        
        elif num==4:
            find_card_infor()
            
        elif num==5:
            show_all_infor()
            
        elif num==6:
            break
        else:
            print("输入有误,请重新输入")


        print("")

#调用主函数
main()

nums = [11,22,33]
infor = {"name":"laowang"}

def test():
    #for num in nums:
    #    print(num)

    nums.append(44)
    infor['age'] = 18

def test2():
    print(nums)
    print(infor)

test()
test2()
列表、字典使用时可以直接修改的，不用加global
